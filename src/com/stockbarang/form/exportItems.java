/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.stockbarang.form;

import com.stockbarang.db.ConnectDB;
import com.stockbarang.db.Helper;
import com.stockbarang.db.Query;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.event.DocumentEvent;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;

import javax.swing.JOptionPane;

/**
 *
 * @author asus
 */
public class exportItems extends javax.swing.JPanel {

    ConnectDB conn;
    Statement st;
    ResultSet re;
    Query q;
    Helper helper;
    public exportItems() {
        initComponents();
        conn = new ConnectDB();
        getExport("");
        txtFilter.getDocument().addDocumentListener(new javax.swing.event.DocumentListener() {

            public void insertUpdate(DocumentEvent e) {
                // ketika teks dimasukkan
                System.out.println("1");
                getExport(txtFilter.getText());
            }

            public void removeUpdate(DocumentEvent e) {
                // ketika teks diubah
                System.out.println("2");
                getExport(txtFilter.getText());
            }

            public void changedUpdate(DocumentEvent e) {
                // ketika teks diubah
                System.out.println("3");
                getExport(txtFilter.getText());
            }
        });
    }
    
    private void getExport(String search){
        Object header[] = {"ID", "DESCRIPTION", "DATE", "STOCK ALL"};
        DefaultTableModel data = new DefaultTableModel(null,header);
        tableData.setModel(data);
        try {
            if(search.equals("")){
                String sql = q.getAll("export");
                st = conn.con.createStatement();
                re = st.executeQuery(sql);
            }else{
                String sql = q.getSearchExport(txtFilter.getText());
                st = conn.con.createStatement();
                re = st.executeQuery(sql);
            }
            
            
            while(re.next()){
                String k0 = re.getString("export_id");
                String k1 = re.getString("export_desc");
                String k2 = re.getString("export_date");
                String k3 = re.getString("export_stock_all");
                
                Object k[] = {k0, k1, k2, k3};
                data.addRow(k);
                
            }
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null,"Terkadi kesalahan saat memuat data!");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tableData = new javax.swing.JTable();
        btnDelete = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        txtFilter = new javax.swing.JTextField();
        btnDetail = new javax.swing.JButton();

        setOpaque(false);

        tableData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tableData);

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnUpdate.setText("Update");

        btnAdd.setText("Add");

        btnDetail.setText("Detail");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnDetail)
                        .addGap(18, 18, 18)
                        .addComponent(btnAdd)
                        .addGap(18, 18, 18)
                        .addComponent(btnUpdate)
                        .addGap(18, 18, 18)
                        .addComponent(btnDelete))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 930, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(40, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDelete)
                    .addComponent(btnUpdate)
                    .addComponent(btnAdd)
                    .addComponent(txtFilter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDetail))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 412, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(40, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
         if(tableData.getSelectedColumn() != -1){
            int selectedRow = tableData.getSelectedRow();
            String id = tableData.getValueAt(selectedRow, 0).toString();
            String name = tableData.getValueAt(selectedRow, 1).toString();
            try{
                if(JOptionPane.showConfirmDialog(null, "Yakin ingin menghapus "+ name +"?") ==  0){
//                    String sql = q.deleteOneData("export", id);
//                    st = conn.con.createStatement();
//                    st.execute(sql);
//                    getExport("");
                    JOptionPane.showMessageDialog(null, "Berhasil di hapus");
                }
            }catch(Exception e){
                JOptionPane.showMessageDialog(null,e);
            }
        }
    }//GEN-LAST:event_btnDeleteActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnDetail;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableData;
    private javax.swing.JTextField txtFilter;
    // End of variables declaration//GEN-END:variables
}
