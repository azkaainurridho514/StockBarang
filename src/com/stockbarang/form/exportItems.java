/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.stockbarang.form;

import com.stockbarang.db.ConnectDB;
import com.stockbarang.db.Helper;
import com.stockbarang.db.Query;
import com.stockbarang.model.Auth;
import com.stockbarang.utils.export_import_crud;
import com.stockbarang.utils.export_import_crud_items;
import com.stockbarang.utils.import_export_detail;
import java.awt.print.PrinterException;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.event.DocumentEvent;
import javax.swing.table.DefaultTableModel;

import javax.swing.JOptionPane;


public class exportItems extends javax.swing.JPanel {
    ConnectDB conn;
    Statement st;
    ResultSet re;
    Query q;
    Helper helper;
     String user_id = "";
    String user_name = "";
    String user_role = "";
    public exportItems() {
        initComponents();
        conn = new ConnectDB();
        user_id = Auth.getUserID();
        user_name = Auth.getUser();
        user_role = Auth.getUserRole();
        getExport("");
        txtFilter.getDocument().addDocumentListener(new javax.swing.event.DocumentListener() {

            public void insertUpdate(DocumentEvent e) {
                // ketika teks dimasukkan
                System.out.println("1");
                getExport(txtFilter.getText());
            }

            public void removeUpdate(DocumentEvent e) {
                // ketika teks diubah
                System.out.println("2");
                getExport(txtFilter.getText());
            }

            public void changedUpdate(DocumentEvent e) {
                // ketika teks diubah
                System.out.println("3");
                getExport(txtFilter.getText());
            }
        });
    }
    
    private void getExport(String search){
        Object header[] = {"ID", "DESCRIPTION", "DATE", "STOCK ALL"};
        DefaultTableModel data = new DefaultTableModel(null,header);
        tableData.setModel(data);
        try {
            if(search.equals("")){
                String sql = q.getAllWhereAnotherId("export", "users", "2");
                st = conn.con.createStatement();
                re = st.executeQuery(sql);
            }else{
                String sql = q.getSearchExport(txtFilter.getText());
                st = conn.con.createStatement();
                re = st.executeQuery(sql);
            }
            
            
            while(re.next()){
                String k0 = re.getString("export_id");
                String k1 = re.getString("export_desc");
                String k2 = re.getString("export_date");
                String k3 = re.getString("export_stock_all");
                String  nulls = "-";
                Object k[] = {k0, k1, k2, k3 == null ? nulls : k3};
                data.addRow(k);
                
            }
        }
        catch(Exception e){
            System.out.println(e);
            JOptionPane.showMessageDialog(null,"Terkadi kesalahan saat memuat data!");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tableData = new javax.swing.JTable();
        btnDelete = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        txtFilter = new javax.swing.JTextField();
        btnDetail = new javax.swing.JButton();
        print = new javax.swing.JButton();

        setOpaque(false);

        tableData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tableData);

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnDetail.setText("Detail");
        btnDetail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDetailActionPerformed(evt);
            }
        });

        print.setText("Print");
        print.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(print)
                        .addGap(18, 18, 18)
                        .addComponent(btnDetail)
                        .addGap(18, 18, 18)
                        .addComponent(btnAdd)
                        .addGap(18, 18, 18)
                        .addComponent(btnDelete))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 930, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(40, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDelete)
                    .addComponent(btnAdd)
                    .addComponent(txtFilter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDetail)
                    .addComponent(print))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 412, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(40, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed

        if(user_name.equals("") || user_id.equals("")){
            JOptionPane.showMessageDialog(null, "ANDA HARUS LOGIN DAHULU!");
        }else{
            if(tableData.getSelectedColumn() != -1){
               int selectedRow = tableData.getSelectedRow();
               String id = tableData.getValueAt(selectedRow, 0).toString();
               String name = tableData.getValueAt(selectedRow, 1).toString();
               try{
                   if(JOptionPane.showConfirmDialog(null, "Yakin ingin menghapus "+ name +"?") ==  0){
                       String sql = q.deleteOneData("export", id);
                       st = conn.con.createStatement();
                       st.execute(sql);
                       getExport("");
                       JOptionPane.showMessageDialog(null, "Berhasil di hapus");
                   }
               }catch(Exception e){
                   JOptionPane.showMessageDialog(null,e);
               }
            }
        }
       
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
//        try{
//            String column = ""; 
//            String sql = q.insertItems("");
//            st.execute(sql);
//            
//        }catch(Exception e){
//            
//        }
        if(user_name.equals("") || user_id.equals("")){
            JOptionPane.showMessageDialog(null, "ANDA HARUS LOGIN DAHULU!");
        }else{
            new export_import_crud("export",user_id, "").setVisible(true);
        } 
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnDetailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDetailActionPerformed
        
        if(user_name.equals("") || user_id.equals("")){
            JOptionPane.showMessageDialog(null, "ANDA HARUS LOGIN DAHULU!");
        }else{
            if(tableData.getSelectedColumn() != -1){
                int selectedRow = tableData.getSelectedRow();
                String id = tableData.getValueAt(selectedRow, 0).toString();
                String desc = tableData.getValueAt(selectedRow, 1).toString();
                String date = tableData.getValueAt(selectedRow, 2).toString();
                String stock = tableData.getValueAt(selectedRow, 3).toString();
                System.out.print(id+desc+date+stock);
                new import_export_detail(id, desc, stock, date, "export").setVisible(true);
            }
        }
    }//GEN-LAST:event_btnDetailActionPerformed

    private void printActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printActionPerformed
          try {
            tableData.print();
        } catch (PrinterException ex) {
            Logger.getLogger(stock.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_printActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnDetail;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton print;
    private javax.swing.JTable tableData;
    private javax.swing.JTextField txtFilter;
    // End of variables declaration//GEN-END:variables
}
